{"mappings":"sgBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAQ,IAAI,E,WAAAC,SAAO,CACvBC,IAAK,qCACLC,OAAQ,CACNC,QAAS,sCAIPC,EAAeC,aAAaC,QAAQ,WACpCC,EAAqBC,KAAKC,MAAML,GAEhCM,EAAaL,aAAaC,QAAQ,SAClCK,EAAmBH,KAAKC,MAAMC,GAEpC,GAAKN,GAA8C,IAA9BG,EAAmBK,OAAxC,CAEO,CAKL,SAASC,IACP,IACE,MAAMC,EAAMP,EAAmBQ,QAAO,CAACC,EAAKC,KAC1ClB,EAAME,IAAM,sCAAsCgB,IAClD,MAAMC,EAASnB,EAAMoB,cAErB,OADAH,EAAII,KAAKF,GACFF,CAAG,GACT,IAEHK,QAAQC,IAAIR,GACTS,MAAKC,IACJ3B,EAAA4B,KAAKC,WAAWC,UAAYC,EAAYJ,EAAM,IAE/CK,OAAMC,GAASC,QAAQC,IAAIF,I,CAC9B,MAAOA,GACPC,QAAQC,IAAIF,E,EAnBhBjC,EAAA4B,KAAKQ,WAAWC,iBAAiB,QAASrB,GAE1CA,G,CAwBF,GAAKH,GAA4C,IAA9BH,EAAmBK,OAE/B,CACLf,EAAA4B,KAAKU,SAASD,iBAAiB,SAE/B,WACE,IACE,MAAMpB,EAAMH,EAAiBI,QAAO,CAACC,EAAKC,KACxClB,EAAME,IAAM,sCAAsCgB,IAClD,MAAMC,EAASnB,EAAMoB,cAErB,OADAH,EAAII,KAAKF,GACFF,CAAG,GACT,IAEHK,QAAQC,IAAIR,GACTS,MAAKC,IACJ3B,EAAA4B,KAAKC,WAAWC,UAAYC,EAAYJ,EAAM,IAE/CK,OAAMC,GAASC,QAAQC,IAAIF,I,CAC9B,MAAOA,GACPC,QAAQC,IAAIF,E,MAKlB,SAASF,EAAYQ,GACnB,OAAOA,EACJC,KACC,EACEC,cACAC,iBACAC,eACAC,SACAxB,KACAyB,mBAEAX,QAAQC,IAAIS,GACL,4CAC0BxB,0CACLA,2DACSqB,oCAA8CrB,wBAAyBsB,2EACrEtB,+CACNA,MAAOsB,gDACRtB,MAAOwB,EACpCJ,KAAIM,GAAQA,EAAKC,OACjBC,KAAK,yDAC+B5B,yDACNA,MAAOuB,EACrCM,MAAM,KACNC,MAAM,EAAG,GACTF,KACC,yCACqCH,6CAM5CG,KAAK,G","sources":["src/js/watched-queue-films.js"],"sourcesContent":["import { refs } from './refs';\nimport Movies from './Movies';\n\nconst films = new Movies({\n  url: 'https://api.themoviedb.org/3/movie',\n  params: {\n    api_key: 'f23afa13cf10e0a13fa8c4a5195ece8b',\n  },\n});\n\nconst savedWatched = localStorage.getItem('Watched');\nconst parcedWatchedFilms = JSON.parse(savedWatched);\n\nconst savedQueue = localStorage.getItem('Queue');\nconst parcedQueueFilms = JSON.parse(savedQueue);\n\nif (!savedWatched || parcedWatchedFilms.length === 0) {\n  return;\n} else {\n  refs.watchedBtn.addEventListener('click', onWatchBtnClick);\n\n  onWatchBtnClick(); // вызов функции чтобы на странице библиотеки сразу показывались фильмы watched\n\n  function onWatchBtnClick() {\n    try {\n      const arr = parcedWatchedFilms.reduce((acc, id) => {\n        films.url = `https://api.themoviedb.org/3/movie/${id}`;\n        const result = films.fetchMovies();\n        acc.push(result);\n        return acc;\n      }, []);\n\n      Promise.all(arr)\n        .then(value => {\n          refs.moviesList.innerHTML = renderMovie(value);\n        })\n        .catch(error => console.log(error));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport default onWatchBtnClick;\n\nif (!savedQueue || parcedWatchedFilms.length === 0) {\n  return;\n} else {\n  refs.queueBtn.addEventListener('click', onQueueBtnClick);\n\n  function onQueueBtnClick() {\n    try {\n      const arr = parcedQueueFilms.reduce((acc, id) => {\n        films.url = `https://api.themoviedb.org/3/movie/${id}`;\n        const result = films.fetchMovies();\n        acc.push(result);\n        return acc;\n      }, []);\n\n      Promise.all(arr)\n        .then(value => {\n          refs.moviesList.innerHTML = renderMovie(value);\n        })\n        .catch(error => console.log(error));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nfunction renderMovie(movies) {\n  return movies\n    .map(\n      ({\n        poster_path,\n        original_title,\n        release_date,\n        genres,\n        id,\n        vote_average,\n      }) => {\n        console.log(genres);\n        return `\n      <li class=\"movie__item\" data-id=\"${id}\">\n  <a class=\"movie__link\" data-id=\"${id}\" href=\"\">\n  <img src=\"https://image.tmdb.org/t/p/w342${poster_path}\" class=\"movie__image\" data-id=\"${id}\" alt=\"Poster movie ${original_title}\"  width=\"\" height=\"\" />\n    <div class=\"movie__description\" data-id=\"${id}\">\n      <p class=\"movie__title\" data-id=\"${id}\">${original_title}</p>\n      <p class=\"movie__info\" data-id=\"${id}\">${genres\n          .map(elem => elem.name)\n          .join(', ')}  \n      <span class=\"movie__breacker\" data-id=\"${id}\"> | </span>\n    <span class=\"movie__year\" data-id=\"${id}\">${release_date\n          .split('-')\n          .slice(0, 1)\n          .join(\n            ''\n          )}</span><span class=\"movie__rating\">${vote_average}</span></p>\n    </div>\n  </a>\n</li>`;\n      }\n    )\n    .join('');\n}\n"],"names":["$krGWQ","parcelRequire","films","default","url","params","api_key","savedWatched","localStorage","getItem","parcedWatchedFilms","JSON","parse","savedQueue","parcedQueueFilms","length","onWatchBtnClick","arr","reduce","acc","id","result","fetchMovies","push","Promise","all","then","value","refs","moviesList","innerHTML","renderMovie","catch","error","console","log","watchedBtn","addEventListener","queueBtn","movies","map","poster_path","original_title","release_date","genres","vote_average","elem","name","join","split","slice"],"version":3,"file":"library.92470fd7.js.map"}