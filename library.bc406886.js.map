{"mappings":"khBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAQ,IAAI,E,WAAAC,SAAO,CACvBC,IAAK,qCACLC,OAAQ,CACNC,QAAS,sCAIPC,EAAeC,aAAaC,QAAQ,WACpCC,EAAqBC,KAAKC,MAAML,GAEhCM,EAAaL,aAAaC,QAAQ,SAClCK,EAAmBH,KAAKC,MAAMC,GAEpC,GAAKN,GAA8C,IAA9BG,EAAmBK,OAAxC,CAEO,CAKL,SAASC,IACP,IACE,IAAMC,EAAMP,EAAmBQ,QAAO,SAACC,EAAKC,GAC1ClB,EAAME,IAAM,sCAAyCiB,OAAHD,GAClD,IAAME,EAASpB,EAAMqB,cAErB,OADAJ,EAAIK,KAAKF,GACFH,C,GACN,IAEHM,QAAQC,IAAIT,GACTU,MAAK,SAAAC,GACJ5B,EAAA6B,KAAKC,WAAWC,UAAYC,EAAYJ,E,IAEzCK,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,E,IAC9B,MAAOA,GACPC,QAAQC,IAAIF,E,EAnBhBlC,EAAA6B,KAAKQ,WAAWC,iBAAiB,QAAStB,GAE1CA,G,CAwBF,GAAKH,GAA4C,IAA9BH,EAAmBK,OAE/B,CACLf,EAAA6B,KAAKU,SAASD,iBAAiB,SAE/B,WACE,IACE,IAAMrB,EAAMH,EAAiBI,QAAO,SAACC,EAAKC,GACxClB,EAAME,IAAM,sCAAyCiB,OAAHD,GAClD,IAAME,EAASpB,EAAMqB,cAErB,OADAJ,EAAIK,KAAKF,GACFH,C,GACN,IAEHM,QAAQC,IAAIT,GACTU,MAAK,SAAAC,GACJ5B,EAAA6B,KAAKC,WAAWC,UAAYC,EAAYJ,E,IAEzCK,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,E,IAC9B,MAAOA,GACPC,QAAQC,IAAIF,E,MAKlB,SAASF,EAAYQ,GACnB,OAAOA,EACJC,KACC,SAAAC,G,IACEC,EAAWD,EAAXC,YACAC,EAAcF,EAAdE,eACAC,EAAYH,EAAZG,aACAC,EAAMJ,EAANI,OACA1B,EAAEsB,EAAFtB,GACA2B,EAAYL,EAAZK,aAGA,OADAZ,QAAQC,IAAIU,GACL,4CAEqBzB,OADKD,EAAG,0CAECC,OADTD,EAAG,2DACoDC,OAA9CsB,EAAY,oCAA2DtB,OAAzBD,EAAG,wBAC/CC,OADqEuB,EAAe,2EAE1FvB,OADMD,EAAG,+CACFC,OAAPD,EAAG,MACJC,OADQuB,EAAe,gDAChBvB,OAAPD,EAAG,MAGIC,OAHAyB,EACpCL,KAAI,SAAAO,G,OAAQA,EAAKC,I,IACjBC,KAAK,MAAM,qDAEmB7B,OADMD,EAAG,yDACFC,OAAPD,EAAG,MAKKC,OALDwB,EACrCM,MAAM,KACNC,MAAM,EAAG,GACTF,KACC,IACA,uCAAkD7B,OAAb0B,EAAa,yC,IAMzDG,KAAK,G,KCvGVjD,EAAA,S,kECAA,IAAAD,EAAAC,EAAA,SAEQoD,EAAoCrD,EAAA6B,KAApCyB,UAAWC,EAAyBvD,EAAA6B,KAAzBU,SAAUiB,EAAexD,EAAA6B,KAAfQ,WAgB7B,SAASoB,EAAcC,EAAUC,EAAYC,GAC3CF,EAASG,UAAUC,IAAIF,GACvBD,EAAWE,UAAUE,OAAOH,E,CAf9BP,EAAUf,iBAAiB,SAE3B,SAA+B0B,GAC7B,OAAQA,EAAEC,OAAOC,QAAQC,QACvB,IAAK,UACHV,EAAcD,EAAYD,EAAU,4BACpC,MACF,IAAK,QACHE,EAAcF,EAAUC,EAAY,4B","sources":["src/js/watched-queue-films.js","src/library.js","src/js/header.js"],"sourcesContent":["import { refs } from './refs';\nimport Movies from './movies';\n\nconst films = new Movies({\n  url: 'https://api.themoviedb.org/3/movie',\n  params: {\n    api_key: 'f23afa13cf10e0a13fa8c4a5195ece8b',\n  },\n});\n\nconst savedWatched = localStorage.getItem('Watched');\nconst parcedWatchedFilms = JSON.parse(savedWatched);\n\nconst savedQueue = localStorage.getItem('Queue');\nconst parcedQueueFilms = JSON.parse(savedQueue);\n\nif (!savedWatched || parcedWatchedFilms.length === 0) {\n  return;\n} else {\n  refs.watchedBtn.addEventListener('click', onWatchBtnClick);\n\n  onWatchBtnClick(); // вызов функции чтобы на странице библиотеки сразу показывались фильмы watched\n\n  function onWatchBtnClick() {\n    try {\n      const arr = parcedWatchedFilms.reduce((acc, id) => {\n        films.url = `https://api.themoviedb.org/3/movie/${id}`;\n        const result = films.fetchMovies();\n        acc.push(result);\n        return acc;\n      }, []);\n\n      Promise.all(arr)\n        .then(value => {\n          refs.moviesList.innerHTML = renderMovie(value);\n        })\n        .catch(error => console.log(error));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport default onWatchBtnClick;\n\nif (!savedQueue || parcedWatchedFilms.length === 0) {\n  return;\n} else {\n  refs.queueBtn.addEventListener('click', onQueueBtnClick);\n\n  function onQueueBtnClick() {\n    try {\n      const arr = parcedQueueFilms.reduce((acc, id) => {\n        films.url = `https://api.themoviedb.org/3/movie/${id}`;\n        const result = films.fetchMovies();\n        acc.push(result);\n        return acc;\n      }, []);\n\n      Promise.all(arr)\n        .then(value => {\n          refs.moviesList.innerHTML = renderMovie(value);\n        })\n        .catch(error => console.log(error));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nfunction renderMovie(movies) {\n  return movies\n    .map(\n      ({\n        poster_path,\n        original_title,\n        release_date,\n        genres,\n        id,\n        vote_average,\n      }) => {\n        console.log(genres);\n        return `\n      <li class=\"movie__item\" data-id=\"${id}\">\n  <a class=\"movie__link\" data-id=\"${id}\" href=\"\">\n  <img src=\"https://image.tmdb.org/t/p/w342${poster_path}\" class=\"movie__image\" data-id=\"${id}\" alt=\"Poster movie ${original_title}\"  width=\"\" height=\"\" />\n    <div class=\"movie__description\" data-id=\"${id}\">\n      <p class=\"movie__title\" data-id=\"${id}\">${original_title}</p>\n      <p class=\"movie__info\" data-id=\"${id}\">${genres\n          .map(elem => elem.name)\n          .join(', ')}  \n      <span class=\"movie__breacker\" data-id=\"${id}\"> | </span>\n    <span class=\"movie__year\" data-id=\"${id}\">${release_date\n          .split('-')\n          .slice(0, 1)\n          .join(\n            ''\n          )}</span><span class=\"movie__rating\">${vote_average}</span></p>\n    </div>\n  </a>\n</li>`;\n      }\n    )\n    .join('');\n}\n","import './js/refs';\nimport './js/spinner';\nimport './js/movies';\nimport './data/genresOfMovies.json';\nimport './js/open-modal';\n// import './js/pagination';\nimport './js/button-up';\nimport './js/watched-queue-films';\nimport './js/header';\n","import { refs } from './refs';\n\nconst { headerBtn, queueBtn, watchedBtn } = refs;\n\n\nheaderBtn.addEventListener('click', changeActiveHeaderBtn);\n\nfunction changeActiveHeaderBtn(e) {\n  switch (e.target.dataset.action) {\n    case 'watched':\n      choseActiveEl(watchedBtn, queueBtn, 'header__item-btn--active');\n      break;\n    case 'queue':\n      choseActiveEl(queueBtn, watchedBtn, 'header__item-btn--active');\n      break;\n  }\n}\n\nfunction choseActiveEl(activate, deactivate, condition) {\n  activate.classList.add(condition);\n  deactivate.classList.remove(condition);\n}\n\n"],"names":["$4Nugj","parcelRequire","films","default","url","params","api_key","savedWatched","localStorage","getItem","parcedWatchedFilms","JSON","parse","savedQueue","parcedQueueFilms","length","onWatchBtnClick","arr","reduce","acc","id","concat","result","fetchMovies","push","Promise","all","then","value","refs","moviesList","innerHTML","renderMovie","catch","error","console","log","watchedBtn","addEventListener","queueBtn","movies","map","param","poster_path","original_title","release_date","genres","vote_average","elem","name","join","split","slice","$d35165bd5db5382a$var$headerBtn","headerBtn","$d35165bd5db5382a$var$queueBtn","$d35165bd5db5382a$var$watchedBtn","$d35165bd5db5382a$var$choseActiveEl","activate","deactivate","condition","classList","add","remove","e","target","dataset","action"],"version":3,"file":"library.bc406886.js.map"}